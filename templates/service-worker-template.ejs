const CACHE_NAME = '<%= cacheName %>'
const FILES_TO_CACHE = ['/', '/index.html', '/service-worker.js', <%- staticFiles.map((f) => `'${f}'`) %>]

self.addEventListener('install', (event) => {
	self.skipWaiting()
	event.waitUntil(
		caches.open(CACHE_NAME).then((cache) => {
			return cache.addAll(FILES_TO_CACHE)
		})
	)
})

self.addEventListener('fetch', (event) => {
	event.respondWith(caches.match(event.request).then((response) => {
		if (response !== undefined) {
			return response
		} else {
			return fetch(event.request, {
				method: 'GET',
				mode: 'cors',
				cache: 'no-cache',
				redirect: 'follow',
				referrerPolicy: 'no-referrer',
				headers: {
					'Content-Type': 'application/json'
				},
			}).then((response) => {
				const responseClone = response.clone()
				caches.open(CACHE_NAME).then((cache) => {
					if(FILES_TO_CACHE.includes(event.request.url)) {
						cache.put(event.request, responseClone)
					}
				})
				return response
			}).catch(() => {})
		}
	}))
})
